// PROJECT: Test Game -- prototype for CS413 project
package edu.testgame;

import java.util.HashSet;
import java.util.Set;

/**
 *
 * @author blasek0
 */
public class SettingsFrame extends javax.swing.JFrame {

    SettingsMenu settings = new SettingsMenu();
    /**
     * Creates new form SettingsFrame
     */
    public SettingsFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        TraceShotCheckbox = new javax.swing.JCheckBox();
        ShotPreviewCheckbox = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        GravityStrengthTextField = new javax.swing.JTextField();
        GravityFieldLabel = new javax.swing.JLabel();
        GameTimeFieldLabel = new javax.swing.JLabel();
        TurnTimeFieldLabel = new javax.swing.JLabel();
        TurnTimeTextField = new javax.swing.JTextField();
        GameTimeTextField = new javax.swing.JTextField();
        BackgroundField = new javax.swing.JTextField();
        BackgroundFieldLabel = new javax.swing.JLabel();
        SaveToFileButton = new javax.swing.JButton();
        SetAsDefaultButton = new javax.swing.JButton();
        LoadFromFileButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TraceShotCheckbox.setText("Trace Shot");
        TraceShotCheckbox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                TraceShotCheckboxStateChanged(evt);
            }
        });
        TraceShotCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TraceShotCheckboxActionPerformed(evt);
            }
        });

        ShotPreviewCheckbox.setText("Shot Preview");
        ShotPreviewCheckbox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ShotPreviewCheckboxStateChanged(evt);
            }
        });
        ShotPreviewCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShotPreviewCheckboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ShotPreviewCheckbox)
                    .addComponent(TraceShotCheckbox))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TraceShotCheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ShotPreviewCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        GravityStrengthTextField.setText("9.82");
        GravityStrengthTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GravityStrengthTextFieldActionPerformed(evt);
            }
        });
        GravityStrengthTextField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                GravityStrengthTextFieldPropertyChange(evt);
            }
        });

        GravityFieldLabel.setText("Gravity");

        GameTimeFieldLabel.setText("Game Time");

        TurnTimeFieldLabel.setText("Turn Time");

        TurnTimeTextField.setText("10");

        GameTimeTextField.setText("600");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GameTimeFieldLabel)
                    .addComponent(TurnTimeFieldLabel)
                    .addComponent(GravityFieldLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(GameTimeTextField)
                    .addComponent(TurnTimeTextField)
                    .addComponent(GravityStrengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GravityFieldLabel)
                    .addComponent(GravityStrengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TurnTimeFieldLabel)
                    .addComponent(TurnTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GameTimeFieldLabel)
                    .addComponent(GameTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        BackgroundField.setText("background");
        BackgroundField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                BackgroundFieldPropertyChange(evt);
            }
        });

        BackgroundFieldLabel.setText("Background");

        SaveToFileButton.setText("Save to File");

        SetAsDefaultButton.setText("Set as Default");

        LoadFromFileButton.setText("Load from File");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(BackgroundFieldLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BackgroundField, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addGap(41, 41, 41)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(114, 114, 114))
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(SaveToFileButton)
                .addGap(18, 18, 18)
                .addComponent(SetAsDefaultButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LoadFromFileButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BackgroundField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BackgroundFieldLabel))))
                .addGap(48, 48, 48)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SaveToFileButton)
                    .addComponent(SetAsDefaultButton)
                    .addComponent(LoadFromFileButton))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ShotPreviewCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShotPreviewCheckboxActionPerformed
        // TODO add your handling code here:
        if (ShotPreviewCheckbox.isSelected() == true)
        ShotPreviewCheckbox.setSelected(false);
        else ShotPreviewCheckbox.setSelected(true);
    }//GEN-LAST:event_ShotPreviewCheckboxActionPerformed

    private void ShotPreviewCheckboxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ShotPreviewCheckboxStateChanged
        // TODO add your handling code here:
        if (settings.setPreviewShot(ShotPreviewCheckbox.isSelected()) == false)
        System.out.print("Error, setShotPreviewShot failed");
    }//GEN-LAST:event_ShotPreviewCheckboxStateChanged

    private void TraceShotCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TraceShotCheckboxActionPerformed
        // TODO add your handling code here:
        if (TraceShotCheckbox.isSelected() == true)
        TraceShotCheckbox.setSelected(false);
        else TraceShotCheckbox.setSelected(true);
    }//GEN-LAST:event_TraceShotCheckboxActionPerformed

    private void TraceShotCheckboxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_TraceShotCheckboxStateChanged
        // TODO add your handling code here:
        if (settings.setTraceShot(TraceShotCheckbox.isSelected()) == false)
        System.out.print("Error, setTraceShot failed");
    }//GEN-LAST:event_TraceShotCheckboxStateChanged

    private void GravityStrengthTextFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_GravityStrengthTextFieldPropertyChange
        // TODO add your handling code here:
        double temp = Double.parseDouble(GravityStrengthTextField.getText());
        settings.setGravity(temp);

    }//GEN-LAST:event_GravityStrengthTextFieldPropertyChange

    private void GravityStrengthTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GravityStrengthTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GravityStrengthTextFieldActionPerformed

    private void BackgroundFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_BackgroundFieldPropertyChange
        // TODO add your handling code here:
        String temp = BackgroundField.getText();
        settings.setBackground(temp);
    }//GEN-LAST:event_BackgroundFieldPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SettingsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SettingsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SettingsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SettingsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SettingsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BackgroundField;
    private javax.swing.JLabel BackgroundFieldLabel;
    private javax.swing.JLabel GameTimeFieldLabel;
    private javax.swing.JTextField GameTimeTextField;
    private javax.swing.JLabel GravityFieldLabel;
    private javax.swing.JTextField GravityStrengthTextField;
    private javax.swing.JButton LoadFromFileButton;
    private javax.swing.JButton SaveToFileButton;
    private javax.swing.JButton SetAsDefaultButton;
    private javax.swing.JCheckBox ShotPreviewCheckbox;
    private javax.swing.JCheckBox TraceShotCheckbox;
    private javax.swing.JLabel TurnTimeFieldLabel;
    private javax.swing.JTextField TurnTimeTextField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
