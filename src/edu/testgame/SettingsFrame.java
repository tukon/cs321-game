// PROJECT: Test Game -- prototype for CS 321 project
package edu.testgame;

import java.awt.FlowLayout;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.HashSet;
import java.util.Set;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JLabel;

/**
 *
 * @author blasek0
 */
public class SettingsFrame extends javax.swing.JFrame {

    /**
     * Creates new form SettingsFrame
     */
    public SettingsFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackgroundFieldLabel = new javax.swing.JLabel();
        SaveChangesButton = new javax.swing.JButton();
        RevertToDefaultButton = new javax.swing.JButton();
        SettingsBackgroundComboBox = new javax.swing.JComboBox<>();
        GravityFieldLabel = new javax.swing.JLabel();
        GravityStrengthTextField = new javax.swing.JTextField();
        TraceShotCheckbox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        BackgroundFieldLabel.setText("Background");

        SaveChangesButton.setText("Save Changes");
        SaveChangesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveChangesButtonActionPerformed(evt);
            }
        });

        RevertToDefaultButton.setText("Revert to Default");
        RevertToDefaultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RevertToDefaultButtonActionPerformed(evt);
            }
        });

        SettingsBackgroundComboBox.setMaximumRowCount(6);
        SettingsBackgroundComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Peaceful Meadow", "Night In The Wilderness", "Wonderland", "Fantasy Castle", "Beach At Sunrise", "Gates Of Atlantis" }));
        SettingsBackgroundComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SettingsBackgroundComboBoxItemStateChanged(evt);
            }
        });
        SettingsBackgroundComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingsBackgroundComboBoxActionPerformed(evt);
            }
        });

        GravityFieldLabel.setText("Gravity");

        GravityStrengthTextField.setText("9.82");
        GravityStrengthTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GravityStrengthTextFieldActionPerformed(evt);
            }
        });
        GravityStrengthTextField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                GravityStrengthTextFieldPropertyChange(evt);
            }
        });

        TraceShotCheckbox.setText("Trace Shot");
        TraceShotCheckbox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                TraceShotCheckboxStateChanged(evt);
            }
        });
        TraceShotCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TraceShotCheckboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TraceShotCheckbox)
                .addGap(244, 244, 244))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(211, Short.MAX_VALUE)
                .addComponent(GravityFieldLabel)
                .addGap(27, 27, 27)
                .addComponent(GravityStrengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(291, 291, 291))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BackgroundFieldLabel)
                            .addComponent(SettingsBackgroundComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(SaveChangesButton)
                        .addGap(18, 18, 18)
                        .addComponent(RevertToDefaultButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(GravityFieldLabel)
                            .addComponent(GravityStrengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(122, 122, 122))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(BackgroundFieldLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SettingsBackgroundComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)))
                .addGap(11, 11, 11)
                .addComponent(TraceShotCheckbox)
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SaveChangesButton)
                    .addComponent(RevertToDefaultButton))
                .addContainerGap(151, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TraceShotCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TraceShotCheckboxActionPerformed
        // TODO add your handling code here:
        //System.out.println(TraceShotCheckbox.isSelected());
        //System.out.println("Checkbox state: " + TraceShotCheckbox.isSelected());
        //System.out.println("Pre-Call state: " + SettingsMenu.getTraceShotEnabled());
        SettingsMenu.setTraceShot(TraceShotCheckbox.isSelected());
        //System.out.println("Post-Call state: " + SettingsMenu.getTraceShotEnabled());
    }//GEN-LAST:event_TraceShotCheckboxActionPerformed

    private void TraceShotCheckboxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_TraceShotCheckboxStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_TraceShotCheckboxStateChanged

    private void GravityStrengthTextFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_GravityStrengthTextFieldPropertyChange
        // TODO add your handling code here:
        double temp = Double.parseDouble(GravityStrengthTextField.getText());
        SettingsMenu.setGravity(temp);

    }//GEN-LAST:event_GravityStrengthTextFieldPropertyChange

    private void GravityStrengthTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GravityStrengthTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GravityStrengthTextFieldActionPerformed
    private void SettingsBackgroundComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SettingsBackgroundComboBoxActionPerformed
    // TODO add your handling code here:
    }//GEN-LAST:event_SettingsBackgroundComboBoxActionPerformed

    private void SettingsBackgroundComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SettingsBackgroundComboBoxItemStateChanged
    // TODO add your handling code here:
/*
    String selectedItemStr = null;
    Object selectedItem = SettingsBackgroundComboBox.getSelectedItem();
    if (selectedItem != null)
    {
        selectedItemStr = selectedItem.toString();
    }
    SettingsMenu.setBackground(selectedItemStr);
    */

    int temp = SettingsBackgroundComboBox.getSelectedIndex();
    SettingsMenu.setBackground(temp);
    }//GEN-LAST:event_SettingsBackgroundComboBoxItemStateChanged

    private void RevertToDefaultButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RevertToDefaultButtonActionPerformed
        // TODO add your handling code here:
        SettingsMenu.revertToDefaultSettings();
    }//GEN-LAST:event_RevertToDefaultButtonActionPerformed

    private void SaveChangesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveChangesButtonActionPerformed
        // TODO add your handling code here:
        SettingsMenu.saveSettings();
    }//GEN-LAST:event_SaveChangesButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SettingsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SettingsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SettingsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SettingsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SettingsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BackgroundFieldLabel;
    private javax.swing.JLabel GravityFieldLabel;
    private javax.swing.JTextField GravityStrengthTextField;
    private javax.swing.JButton RevertToDefaultButton;
    private javax.swing.JButton SaveChangesButton;
    private javax.swing.JComboBox<String> SettingsBackgroundComboBox;
    private javax.swing.JCheckBox TraceShotCheckbox;
    // End of variables declaration//GEN-END:variables
}
